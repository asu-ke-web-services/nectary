<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/Users/rraub1/Dropbox-ASU/dev/nectary/src/factories/implementations" file="dependency-injection-factory.php" realpath="/Users/rraub1/Dropbox-ASU/dev/nectary/src/factories/implementations/dependency-injection-factory.php" size="4286" time="2016-03-15T14:58:32-07:00" unixtime="1458079112" sha1="27b5966d19ac28192e285ab82e3308fc7c9d222a" relative="factories/implementations/dependency-injection-factory.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Nectary</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Factories</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4"/>
  <line no="5">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Nectary</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Factory</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Nectary</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Singleton</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="7">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Nectary</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Request</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="8"/>
  <line no="9">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT"> * Given a class name and method for the class</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT"> * (the constructor is an allowed method), this factory</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT"> * will automatically build the given object and</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT"> * provide the dependencies for the given method using</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT"> * the given arguments as suggestions.</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT"> * @extends Factory</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="18">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Dependency_Injection_Factory</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXTENDS">extends</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Factory</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="19">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$class_name</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="20">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$method_name</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="21">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$arguments</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="22">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$validators</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="23"/>
  <line no="24">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT">   * Setup object variables</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT">   * @constructor</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT">   * @param $class_name String</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT">   * @param $method_name String</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT">   * @param $arguments Array</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="32">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">__construct</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$class_name</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$method_name</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$arguments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="33">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">class_name</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$class_name</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="34">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">method_name</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$method_name</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="35">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">arguments</token>
    <token name="T_WHITESPACE">   </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$arguments</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="36">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">validators</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="37">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="38"/>
  <line no="39">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="40">
    <token name="T_DOC_COMMENT">   * Build the object, its dependencies, and list</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT">   * any validators that should be checked</token>
  </line>
  <line no="42">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="43">
    <token name="T_DOC_COMMENT">   * @override</token>
  </line>
  <line no="44">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="45">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">build</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="46">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$reflector</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">ReflectionMethod</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="47">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">class_name</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="48">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">method_name</token>
  </line>
  <line no="49">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="50"/>
  <line no="51">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$dependencies</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">get_dependencies</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="52">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$reflector</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="53">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">arguments</token>
  </line>
  <line no="54">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="55"/>
  <line no="56">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$obj</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">make</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="57">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">class_name</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="58">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">arguments</token>
  </line>
  <line no="59">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="60"/>
  <line no="61">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$obj</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$dependencies</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">validators</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="62">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="63"/>
  <line no="64">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="65">
    <token name="T_DOC_COMMENT">   * Get the dependencies for a given reflection object</token>
  </line>
  <line no="66">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="67">
    <token name="T_DOC_COMMENT">   * @param $reflector ReflectionMethod Reflection object to gather dependencies from</token>
  </line>
  <line no="68">
    <token name="T_DOC_COMMENT">   * @param $named_arguments Array An associative array of suggested arguments</token>
  </line>
  <line no="69">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="70">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">get_dependencies</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">ReflectionMethod</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$reflector</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$named_arguments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="71">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$reflector_parameters</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$reflector</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getParameters</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="72"/>
  <line no="73">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$dependencies</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">resolve_dependencies</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$reflector_parameters</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$named_arguments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="74"/>
  <line no="75">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$dependencies</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="76">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="77"/>
  <line no="78">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="79">
    <token name="T_DOC_COMMENT">   * Resolve all dependencies recursively. Untyped parameters will</token>
  </line>
  <line no="80">
    <token name="T_DOC_COMMENT">   * have the $named_arguments injected into them</token>
  </line>
  <line no="81">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="82">
    <token name="T_DOC_COMMENT">   * @param $reflector_parameters Array&lt;ReflectionParameters&gt; Will check these for dependencies</token>
  </line>
  <line no="83">
    <token name="T_DOC_COMMENT">   * @param $named_arguments Array An associative array of suggested arguments</token>
  </line>
  <line no="84">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="85">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">resolve_dependencies</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$reflector_parameters</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$named_arguments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="86">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// map the named_arguments to the reflector_parameters</token>
  </line>
  <line no="87">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$dependencies</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="88"/>
  <line no="89">
    <token name="T_WHITESPACE">    </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$reflector_parameters</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$parameters</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="90">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_key_exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$parameters</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$named_arguments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="91">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$dependencies</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$named_arguments</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$parameters</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="92"/>
  <line no="93">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// TODO Need to determine whether used parameters should</token>
  </line>
  <line no="94">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// be popped. If they should, uncomment out the following</token>
  </line>
  <line no="95">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// line.</token>
  </line>
  <line no="96">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// unset( $named_arguments[ $parameters-&gt;getName() ] );</token>
  </line>
  <line no="97">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$parameters</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="98">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$dependencies</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">make</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$parameters</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">name</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$named_arguments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="99">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$parameters</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isDefaultValueAvailable</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="100">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$dependencies</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$parameters</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getDefaultValue</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="101">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="102">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$dependencies</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$named_arguments</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="103">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="104">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// TODO inject default values (if available)</token>
  </line>
  <line no="105">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="106">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$dependencies</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="107">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="108"/>
  <line no="109">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="110">
    <token name="T_DOC_COMMENT">   * Given a class and arguments to inject into that class, this</token>
  </line>
  <line no="111">
    <token name="T_DOC_COMMENT">   * will create an instance of the given object.</token>
  </line>
  <line no="112">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="113">
    <token name="T_DOC_COMMENT">   * This will handle special cases as well.</token>
  </line>
  <line no="114">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="115">
    <token name="T_DOC_COMMENT">   * @param $class_name String The name of the class to make</token>
  </line>
  <line no="116">
    <token name="T_DOC_COMMENT">   * @param $named_arguments Array The arguments to inject into the class</token>
  </line>
  <line no="117">
    <token name="T_DOC_COMMENT">   * @return Mixed An instance of the class</token>
  </line>
  <line no="118">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="119">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">make</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$class_name</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$named_arguments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="120">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$reflector</token>
    <token name="T_WHITESPACE">   </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">ReflectionClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$class_name</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="121">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$constructor</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$reflector</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getConstructor</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="122"/>
  <line no="123">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">is_subclass_of</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$class_name</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Singleton</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="124">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$class_name</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">get_instance</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="125">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$reflector</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isAbstract</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="126">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="127">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">is_null</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$constructor</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="128">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$class_name</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="129">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="130"/>
  <line no="131">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$dependencies</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">get_dependencies</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$constructor</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$named_arguments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="132">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$obj</token>
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$reflector</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">newInstanceArgs</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$dependencies</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="133"/>
  <line no="134">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// Handle special case of registering requests</token>
  </line>
  <line no="135">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$obj</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INSTANCEOF">instanceof</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Request</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="136">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">validators</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$obj</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="137">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="138"/>
  <line no="139">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$obj</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="140">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="141">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="142"/>
</source>
